// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YesilEvMVC.UI.Context;

#nullable disable

namespace YesilEvMVC.UI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423231236_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Aktivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AktiviteAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AktivitePuani")
                        .HasColumnType("int");

                    b.Property<DateTime>("AktiviteZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Aktivite");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KayitTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KayitAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KayitTipi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            KayitAdi = "Gmail"
                        },
                        new
                        {
                            Id = 2,
                            KayitAdi = "Hotmail"
                        },
                        new
                        {
                            Id = 3,
                            KayitAdi = "Yahoo"
                        },
                        new
                        {
                            Id = 4,
                            KayitAdi = "Outlook"
                        });
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("KayitTipiId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("KayitTipiId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciAktivite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AktiviteId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AktiviteId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciAktivite");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciFavori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunId");

                    b.ToTable("KullaniciFavori");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciKaraListe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("UrunIcerikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("UrunIcerikId");

                    b.ToTable("KullaniciKaraListe");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.ProgramIzin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Kamera")
                        .HasColumnType("bit");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("ProgramIzin");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Uretici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("UreticiAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Uretici");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BarkodNo")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("RenkId")
                        .HasColumnType("int");

                    b.Property<int>("UreticiId")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrunIcerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("RenkId");

                    b.HasIndex("UreticiId");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunIcerik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IcerikAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunIcerik");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunIcerikRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IcerikId")
                        .HasColumnType("int");

                    b.Property<int>("UrunRiskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IcerikId");

                    b.HasIndex("UrunRiskId");

                    b.ToTable("UrunIcerikRisk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunPaylas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PaylasmaTipi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunPaylas");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunPaylasKaydi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaylasimTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaylasmaId")
                        .HasColumnType("int");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("PaylasmaId");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunPaylasKaydi");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunRisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RiskAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UrunRisk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunRiskRenk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Renk")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UrunRiskRenk");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Kullanici", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.KayitTipi", null)
                        .WithMany("Kullanici")
                        .HasForeignKey("KayitTipiId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciAktivite", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Aktivite", "Aktivite")
                        .WithMany("KullaniciAktivite")
                        .HasForeignKey("AktiviteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany("KullaniciVeAktivite")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aktivite");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciFavori", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kategori", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KullaniciKaraListe", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany("KullaniciVeKaraListe")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.UrunIcerik", "UrunIcerik")
                        .WithMany("KullaniciKaraListe")
                        .HasForeignKey("UrunIcerikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("UrunIcerik");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.ProgramIzin", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany("ProgramIzin")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Urun", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kategori", "Kategori")
                        .WithMany("Urun")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany("Urun")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.UrunRiskRenk", "UrunRiskRenk")
                        .WithMany("Urun")
                        .HasForeignKey("RenkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Uretici", "Uretici")
                        .WithMany("Urun")
                        .HasForeignKey("UreticiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");

                    b.Navigation("Uretici");

                    b.Navigation("UrunRiskRenk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunIcerik", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kategori", null)
                        .WithMany("UrunIcerik")
                        .HasForeignKey("KategoriId");

                    b.HasOne("YesilEvMVC.UI.Models.Urun", null)
                        .WithMany("urunIcerik")
                        .HasForeignKey("UrunId");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunIcerikRisk", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.UrunIcerik", "Icerik")
                        .WithMany("UrunIcerikRisk")
                        .HasForeignKey("IcerikId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.UrunRisk", "UrunRisk")
                        .WithMany("UrunIcerikRisk")
                        .HasForeignKey("UrunRiskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Icerik");

                    b.Navigation("UrunRisk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunPaylas", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Urun", null)
                        .WithMany("UrunPaylas")
                        .HasForeignKey("UrunId");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunPaylasKaydi", b =>
                {
                    b.HasOne("YesilEvMVC.UI.Models.Kullanici", "Kullanici")
                        .WithMany("UrunPaylasimKaydi")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.UrunPaylas", "UrunPaylas")
                        .WithMany("UrunPaylasKaydi")
                        .HasForeignKey("PaylasmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YesilEvMVC.UI.Models.Urun", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Urun");

                    b.Navigation("UrunPaylas");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Aktivite", b =>
                {
                    b.Navigation("KullaniciAktivite");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Kategori", b =>
                {
                    b.Navigation("Urun");

                    b.Navigation("UrunIcerik");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.KayitTipi", b =>
                {
                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Kullanici", b =>
                {
                    b.Navigation("KullaniciVeAktivite");

                    b.Navigation("KullaniciVeKaraListe");

                    b.Navigation("ProgramIzin");

                    b.Navigation("Urun");

                    b.Navigation("UrunPaylasimKaydi");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Uretici", b =>
                {
                    b.Navigation("Urun");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.Urun", b =>
                {
                    b.Navigation("UrunPaylas");

                    b.Navigation("urunIcerik");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunIcerik", b =>
                {
                    b.Navigation("KullaniciKaraListe");

                    b.Navigation("UrunIcerikRisk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunPaylas", b =>
                {
                    b.Navigation("UrunPaylasKaydi");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunRisk", b =>
                {
                    b.Navigation("UrunIcerikRisk");
                });

            modelBuilder.Entity("YesilEvMVC.UI.Models.UrunRiskRenk", b =>
                {
                    b.Navigation("Urun");
                });
#pragma warning restore 612, 618
        }
    }
}
